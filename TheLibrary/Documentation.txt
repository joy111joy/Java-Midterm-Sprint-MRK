USER DOCUMENTATION:

Introduction to the library management application

The library management application is a JAVA project for librarians to store data of their patrons, authors, books, and periodicals.
This system allows the user to:
1. Add, edit, or delete books and periodicals
2. Store a number of copies of each library item that changes when the item is borrowed or returned.
3. Add and store information about the current authors offered in the library.
4. Search for library items based on their title, author, or ISBN.

EXPLAINATION OF JAVA CLASSES:
Author Class: The author class handles information about the author of different library items. The information handled is: Name, Date of Birth, and their items written

LibraryItem Class: The LibraryItem class is a super class to the Book and Periodicals classes. A library item refers to a general item in the library. This class
handles the basic information regarding the item. The information handled: Id, title, author, ISBN, Publisher, and Number of Copies. 

Book class and Periodical class: These classes extend from LibraryItem. These classes handle only one more bit of informatio. That is the Type of item. For the book
class this could be printed, electronic, or audio. For the periodicals class this could be printed or electronic.

Patron Class: This class handles the information about library's patrons. This includes their name, address, and phone number. This class also contains the methods
for borrowing and returning books as it is tied to their name. 

LibraryManager Class: This class contain most of the complicated methods for the project. It contained items lists for books authors and patrons. Some of the 
methods included were adding, editing, deleting, and searching for items, authors, and patrons. 

LibraryMenu Class: This class conatains all of the code for the menu system. The menu system has 9 options. In order they are: adding item, editing item,
deleting item, borrowing item, returning item, search for item by its title, search for item by its author, search for item by its ISBN, and finally an option
to exit the menu system. 




DEVELOPMENT DOCUMENTION:

To run the code you need to ensure that java is installed to your system.
As well, make sure the file directory looks as the following:

>JAVALIBRARYPROJECT
    >LibraryItem    
        -Author.java
        -Book.java
        -LibraryItem.java
        -LibraryManager.java
        -LibraryMenu.java
        -Patron.java
        -Periodical.java
        -TestMyLibrary.java
    


There are 8 required java documents for this system to work.
1. Author.java
2. Book.java
3. LibraryItem.java
4. LibraryManager.java
5. LibraryMenu.java
6. Patron.java
7. Periodical.java
8. TestMyLibrary.java 
NOTE: The TestMyLibrary.java file is only a test file and can be ignore if desired but can be used to ensure the code is running without issues.

TESTING THE PROJECT:
To test if the files are correctly installed and are working, run the TestMyLibrary.java file. If everything is correct the output should look like the following:



DATABASE:

The database for this project looks like the following




